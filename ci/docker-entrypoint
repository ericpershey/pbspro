#!/bin/bash -ex

# Copyright (C) 1994-2020 Altair Engineering, Inc.
# For more information, contact Altair at www.altair.com.
#
# This file is part of both the OpenPBS software ("OpenPBS")
# and the PBS Professional ("PBS Pro") software.
#
# Open Source License Information:
#
# OpenPBS is free software. You can redistribute it and/or modify it under
# the terms of the GNU Affero General Public License as published by the
# Free Software Foundation, either version 3 of the License, or (at your
# option) any later version.
#
# OpenPBS is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public
# License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Commercial License Information:
#
# PBS Pro is commercially licensed software that shares a common core with
# the OpenPBS software.  For a copy of the commercial license terms and
# conditions, go to: (http://www.pbspro.com/agreement.html) or contact the
# Altair Legal Department.
#
# Altair's dual-license business model allows companies, individuals, and
# organizations to create proprietary derivative works of OpenPBS and
# distribute them - whether embedded or bundled with other software -
# under a commercial license agreement.
#
# Use of Altair's trademarks, including but not limited to "PBS™",
# "OpenPBS®", "PBS Professional®", and "PBS Pro™" and Altair's logos is
# subject to Altair's trademark licensing policies.

workdir=/src
logdir=/logs
cd /pbssrc
${workdir}/do.sh 1 | tee ${logdir}/build
commit_id=$( cd /pbssrc && /usr/bin/git log --oneline -1 | awk -F' ' '{print $1}' )
while true; do
    new_commit=$( cd /pbssrc && /usr/bin/git log --oneline -1 | awk -F' ' '{print $1}' )
    if [ "xx${commit_id}" != "xx${new_commit}" ]; then
        time_stamp=$( date +"%s" )
        [ ! -d ${logdir}/prev_LOGS ] && mkdir -p ${logdir}/prev_LOGS
        cp ${logdir}/build ${logdir}/prev_LOGS/
        mv ${logdir}/prev_LOGS/build ${logdir}/prev_LOGS/${commit_id}_${time_stamp}.build
        if [ -f ${logdir}/logfile ];then
            cp ${logdir}/logfile ${logdir}/prev_LOGS/
            mv ${logdir}/prev_LOGS/logfile ${logdir}/prev_LOGS/${commit_id}_${time_stamp}.ptl
        fi
        ${workdir}/do.sh  | tee ${logdir}/build
        export ENABLE_TEST=1 && export ONLY_TEST=1 && ${workdir}/do.sh
        commit_id=${new_commit}
    fi
    sleep 30
done
